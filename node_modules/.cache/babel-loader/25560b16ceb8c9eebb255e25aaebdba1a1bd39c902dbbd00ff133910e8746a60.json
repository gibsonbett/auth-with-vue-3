{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Form, Field, ErrorMessage } from \"vee-validate\";\nimport * as yup from \"yup\";\nexport default {\n  name: \"Register\",\n  components: {\n    Form,\n    Field,\n    ErrorMessage\n  },\n  data() {\n    const schema = yup.object().shape({\n      username: yup.string().required(\"Username is required!\").min(3, \"Must be at least 3 characters!\").max(20, \"Must be maximum 20 characters!\"),\n      email: yup.string().required(\"Email is required!\").email(\"Email is invalid!\").max(50, \"Must be maximum 50 characters!\"),\n      password: yup.string().required(\"Password is required!\").min(6, \"Must be at least 6 characters!\").max(40, \"Must be maximum 40 characters!\")\n    });\n    return {\n      successful: false,\n      loading: false,\n      message: \"\",\n      schema\n    };\n  },\n  computed: {\n    loggedIn() {\n      return this.$store.state.auth.status.loggedIn;\n    }\n  },\n  mounted() {\n    if (this.loggedIn) {\n      this.$router.push(\"/profile\");\n    }\n  },\n  methods: {\n    handleRegister(user) {\n      this.message = \"\";\n      this.successful = false;\n      this.loading = true;\n      this.$store.dispatch(\"auth/register\", user).then(data => {\n        this.message = data.message;\n        this.successful = true;\n        this.loading = false;\n      }, error => {\n        this.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.successful = false;\n        this.loading = false;\n      });\n    }\n  }\n};","map":{"version":3,"names":["Form","Field","ErrorMessage","yup","name","components","data","schema","object","shape","username","string","required","min","max","email","password","successful","loading","message","computed","loggedIn","$store","state","auth","status","mounted","$router","push","methods","handleRegister","user","dispatch","then","error","response","toString"],"sources":["/home/sircastic/authentication-with-vue-3/src/components/Register.vue"],"sourcesContent":["<template>\n    <div class=\"col-md-12\">\n      <div class=\"card card-container\">\n        <img\n          id=\"profile-img\"\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          class=\"profile-img-card\"\n        />\n        <Form @submit=\"handleRegister\" :validation-schema=\"schema\">\n          <div v-if=\"!successful\">\n            <div class=\"form-group\">\n              <label for=\"username\">Username</label>\n              <Field name=\"username\" type=\"text\" class=\"form-control\" />\n              <ErrorMessage name=\"username\" class=\"error-feedback\" />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <Field name=\"email\" type=\"email\" class=\"form-control\" />\n              <ErrorMessage name=\"email\" class=\"error-feedback\" />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"password\">Password</label>\n              <Field name=\"password\" type=\"password\" class=\"form-control\" />\n              <ErrorMessage name=\"password\" class=\"error-feedback\" />\n            </div>\n  \n            <div class=\"form-group\">\n              <button class=\"btn btn-primary btn-block\" :disabled=\"loading\">\n                <span\n                  v-show=\"loading\"\n                  class=\"spinner-border spinner-border-sm\"\n                ></span>\n                Sign Up\n              </button>\n            </div>\n          </div>\n        </Form>\n  \n        <div\n          v-if=\"message\"\n          class=\"alert\"\n          :class=\"successful ? 'alert-success' : 'alert-danger'\"\n        >\n          {{ message }}\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { Form, Field, ErrorMessage } from \"vee-validate\";\n  import * as yup from \"yup\";\n  \n  export default {\n    name: \"Register\",\n    components: {\n      Form,\n      Field,\n      ErrorMessage,\n    },\n    data() {\n      const schema = yup.object().shape({\n        username: yup\n          .string()\n          .required(\"Username is required!\")\n          .min(3, \"Must be at least 3 characters!\")\n          .max(20, \"Must be maximum 20 characters!\"),\n        email: yup\n          .string()\n          .required(\"Email is required!\")\n          .email(\"Email is invalid!\")\n          .max(50, \"Must be maximum 50 characters!\"),\n        password: yup\n          .string()\n          .required(\"Password is required!\")\n          .min(6, \"Must be at least 6 characters!\")\n          .max(40, \"Must be maximum 40 characters!\"),\n      });\n  \n      return {\n        successful: false,\n        loading: false,\n        message: \"\",\n        schema,\n      };\n    },\n    computed: {\n      loggedIn() {\n        return this.$store.state.auth.status.loggedIn;\n      },\n    },\n    mounted() {\n      if (this.loggedIn) {\n        this.$router.push(\"/profile\");\n      }\n    },\n    methods: {\n      handleRegister(user) {\n        this.message = \"\";\n        this.successful = false;\n        this.loading = true;\n  \n        this.$store.dispatch(\"auth/register\", user).then(\n          (data) => {\n            this.message = data.message;\n            this.successful = true;\n            this.loading = false;\n          },\n          (error) => {\n            this.message =\n              (error.response &&\n                error.response.data &&\n                error.response.data.message) ||\n              error.message ||\n              error.toString();\n            this.successful = false;\n            this.loading = false;\n          }\n        );\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  \n  </style>"],"mappings":";AAkDE,SAASA,IAAI,EAAEC,KAAK,EAAEC,YAAW,QAAS,cAAc;AACxD,OAAO,KAAKC,GAAE,MAAO,KAAK;AAE1B,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACVL,IAAI;IACJC,KAAK;IACLC;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,MAAMC,MAAK,GAAIJ,GAAG,CAACK,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;MAChCC,QAAQ,EAAEP,GAAE,CACTQ,MAAM,CAAC,EACPC,QAAQ,CAAC,uBAAuB,EAChCC,GAAG,CAAC,CAAC,EAAE,gCAAgC,EACvCC,GAAG,CAAC,EAAE,EAAE,gCAAgC,CAAC;MAC5CC,KAAK,EAAEZ,GAAE,CACNQ,MAAM,CAAC,EACPC,QAAQ,CAAC,oBAAoB,EAC7BG,KAAK,CAAC,mBAAmB,EACzBD,GAAG,CAAC,EAAE,EAAE,gCAAgC,CAAC;MAC5CE,QAAQ,EAAEb,GAAE,CACTQ,MAAM,CAAC,EACPC,QAAQ,CAAC,uBAAuB,EAChCC,GAAG,CAAC,CAAC,EAAE,gCAAgC,EACvCC,GAAG,CAAC,EAAE,EAAE,gCAAgC;IAC7C,CAAC,CAAC;IAEF,OAAO;MACLG,UAAU,EAAE,KAAK;MACjBC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,EAAE;MACXZ;IACF,CAAC;EACH,CAAC;EACDa,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,CAACJ,QAAQ;IAC/C;EACF,CAAC;EACDK,OAAOA,CAAA,EAAG;IACR,IAAI,IAAI,CAACL,QAAQ,EAAE;MACjB,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;IAC/B;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAACC,IAAI,EAAE;MACnB,IAAI,CAACZ,OAAM,GAAI,EAAE;MACjB,IAAI,CAACF,UAAS,GAAI,KAAK;MACvB,IAAI,CAACC,OAAM,GAAI,IAAI;MAEnB,IAAI,CAACI,MAAM,CAACU,QAAQ,CAAC,eAAe,EAAED,IAAI,CAAC,CAACE,IAAI,CAC7C3B,IAAI,IAAK;QACR,IAAI,CAACa,OAAM,GAAIb,IAAI,CAACa,OAAO;QAC3B,IAAI,CAACF,UAAS,GAAI,IAAI;QACtB,IAAI,CAACC,OAAM,GAAI,KAAK;MACtB,CAAC,EACAgB,KAAK,IAAK;QACT,IAAI,CAACf,OAAM,GACRe,KAAK,CAACC,QAAO,IACZD,KAAK,CAACC,QAAQ,CAAC7B,IAAG,IAClB4B,KAAK,CAACC,QAAQ,CAAC7B,IAAI,CAACa,OAAO,IAC7Be,KAAK,CAACf,OAAM,IACZe,KAAK,CAACE,QAAQ,CAAC,CAAC;QAClB,IAAI,CAACnB,UAAS,GAAI,KAAK;QACvB,IAAI,CAACC,OAAM,GAAI,KAAK;MACtB,CACF,CAAC;IACH;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}